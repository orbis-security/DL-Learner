// declare some prefixes to use as abbreviations
prefixes = [ ("kb","http://localhost/foo#") ]

// knowledge source definition
ks.type = "KB File"
ks.fileName = "daughter.kb"
// ks.baseDir = "examples/family"; //Assuming running from parent directory of examples.

// reasoner
reasoner.type = "closed world reasoner"
reasoner.sources = { ks }

// learning problem
lp.type = "posNegStandard"
lp.positiveExamples = {"kb:markus","kb:bernd","kb:franziska","kb:gabi"}
lp.negativeExamples = {"kb:heinz","kb:anna","kb:michelle","kb:stefan"}

// plug a reasoner into the learning problem
lp.reasoner = reasoner
//lp.reasoner = reasoner - try to remove the component:part in the parser

// create a refinement operator and configure it
op.type = "rho"
op.useCardinalityRestrictions = true
op.reasoner = reasoner

// create a heuristic and configure it
h.type = "multiheuristic"
h.expansionPenaltyFactor = 0.2

// create learning algorithm to run
alg.type = "ocel"
alg.reasoner = reasoner
alg.operator = op
alg.heuristic = h
alg.maxExecutionTimeInSeconds = 15
