/**
 * Father Example
 *
 * learned axiom:
 *   father SubClassOf learnedClass
 *
 * Copyright (C) 2007, Jens Lehmann
 */
//declare some prefixes to use as abbrevations
prefixes = [ ("ex","http://example.com/father#") ]
cli.type = "org.dllearner.cli.unife.CLILEAP"
//cli.writeSpringConfiguration = false
/* knowledge source definition */
ks.type = "OWL File"
ks.fileName = "prob_father.owl" 
/* reasoner component */
reasoner.type = "closed world reasoner"
reasoner.sources = { ks }
// learning parameter
lpr.type = "EDGE"
lpr.randomize = true
lpr.probabilizeAll = true
lpr.showAll = true
lpr.differenceLL = 0.001
lpr.ratioLL = 0.00001
lpr.maxExplanations = 3
lpr.maxIterations = 1000
// create learning algorithm to run
alg.type = "celoe"
alg.maxExecutionTimeInSeconds = "10"
alg.writeSearchTree = false
alg.maxNrOfResults = 10
alg.maxExecutionTimeInSeconds = 10
// create structure learner
psla.type = "org.dllearner.algorithms.probabilistic.structure.unife.leap.LEAP"
psla.classAxiomType = "equivalentClasses"
/* learning problem */
lp.type = "posNegStandard"
lp.positiveExamples = { "ex:stefan", "ex:markus", "ex:martin" }
lp.negativeExamples = { "ex:heinz", "ex:anna", "ex:michelle" }

/*lp.type = "clp"
lp.classToDescribe = "ex:father"
*/
