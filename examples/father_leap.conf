/**
 * Father Example
 *
 * learned axiom:
 *   father SubClassOf learnedClass
 *
 * Copyright (C) 2007, Jens Lehmann
 */


//declare some prefixes to use as abbrevations
prefixes = [ ("ex","http://example.com/father#") ]


cli.type = "org.dllearner.cli.unife.CLILEAP"
//cli.writeSpringConfiguration = false


/* knowledge source definition */
ks.type = "OWL File"
ks.fileName = "../examples/family/father_oe.owl" 

/* reasoner component */
reasoner.type = "closed world reasoner"
reasoner.sources = { ks }

// learning parameter
lpr.type = "org.dllearner.algorithms.probabilistic.parameter.unife.edge.EDGE"
lpr.randomize = true
lpr.probabilizeAll = true
lpr.showAll = true
lpr.differenceLL = 0.001
lpr.ratioLL = 0.00001
lpr.maxExplanations = 3
lpr.maxIterations = 1000


// create learning algorithm to run
alg.type = "celoe"
alg.maxExecutionTimeInSeconds = "10"
//alg.completeLearnedOntology = "/home/collab1/cota/minitest2/short/complete_learned_dbp.owl"
//alg.searchTreeFile = "log/search_tree.log"
alg.writeSearchTree = false
alg.maxNrOfResults = 10
alg.maxExecutionTimeInSeconds = 10

// create structure learner
psla.type = "org.dllearner.algorithms.probabilistic.structure.unife.leap.LEAP"

/* learning problem */
lp.type = "posNegStandard"
lp.positiveExamples = { "ex:stefan", "ex:markus", "ex:martin" }
lp.negativeExamples = { "ex:heinz", "ex:anna", "ex:michelle" }

